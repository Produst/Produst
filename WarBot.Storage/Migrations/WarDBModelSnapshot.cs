// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarBot.Storage;

namespace WarBot.Storage.Migrations
{
    [DbContext(typeof(WarDB))]
    partial class WarDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("WarBot.Storage.Models.DiscordEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong?>("EntityId");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("DiscordEntity");
                });

            modelBuilder.Entity("WarBot.Storage.Models.Guild", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ConfigId");

                    b.Property<string>("Name");

                    b.HasKey("GuildId");

                    b.HasIndex("ConfigId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("WarBot.Storage.Models.GuildConfig", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BotVersion");

                    b.Property<int>("Environment");

                    b.Property<int?>("GuildNotificationSettingsId");

                    b.Property<string>("Loot");

                    b.Property<string>("Website");

                    b.Property<int?>("ch_news_id");

                    b.Property<int?>("ch_officers_id");

                    b.Property<int?>("ch_war_id");

                    b.Property<int?>("ch_welcome_id");

                    b.Property<int?>("role_admin_id");

                    b.Property<int?>("role_leader_id");

                    b.Property<int?>("role_member_id");

                    b.Property<int?>("role_officer_id");

                    b.HasKey("ID");

                    b.HasIndex("GuildNotificationSettingsId");

                    b.HasIndex("ch_news_id");

                    b.HasIndex("ch_officers_id");

                    b.HasIndex("ch_war_id");

                    b.HasIndex("ch_welcome_id");

                    b.HasIndex("role_admin_id");

                    b.HasIndex("role_leader_id");

                    b.HasIndex("role_member_id");

                    b.HasIndex("role_officer_id");

                    b.ToTable("GuildConfig");
                });

            modelBuilder.Entity("WarBot.Storage.Models.GuildNotificationsConfig", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("SendUpdateMessage");

                    b.Property<bool>("War1Enabled");

                    b.Property<bool>("War2Enabled");

                    b.Property<bool>("War3Enabled");

                    b.Property<bool>("War4Enabled");

                    b.Property<bool>("WarPrepAlmostOver");

                    b.Property<string>("WarPrepEndingMessage");

                    b.Property<bool>("WarPrepStarted");

                    b.Property<string>("WarPrepStartedMessage");

                    b.Property<bool>("WarStarted");

                    b.Property<string>("WarStartedMessage");

                    b.HasKey("ID");

                    b.ToTable("GuildNotificationsConfig");
                });

            modelBuilder.Entity("WarBot.Storage.Models.User", b =>
                {
                    b.Property<ulong>("ID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WarBot.Storage.Models.Guild", b =>
                {
                    b.HasOne("WarBot.Storage.Models.GuildConfig", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId");
                });

            modelBuilder.Entity("WarBot.Storage.Models.GuildConfig", b =>
                {
                    b.HasOne("WarBot.Storage.Models.GuildNotificationsConfig", "NotificationSettings")
                        .WithMany()
                        .HasForeignKey("GuildNotificationSettingsId");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Channel_WarBot_News")
                        .WithMany()
                        .HasForeignKey("ch_news_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Channel_Officers")
                        .WithMany()
                        .HasForeignKey("ch_officers_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Channel_WAR_Notifications")
                        .WithMany()
                        .HasForeignKey("ch_war_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Channel_Welcome")
                        .WithMany()
                        .HasForeignKey("ch_welcome_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Role_Admin")
                        .WithMany()
                        .HasForeignKey("role_admin_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Role_Leader")
                        .WithMany()
                        .HasForeignKey("role_leader_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Role_Member")
                        .WithMany()
                        .HasForeignKey("role_member_id");

                    b.HasOne("WarBot.Storage.Models.DiscordEntity", "Role_Officer")
                        .WithMany()
                        .HasForeignKey("role_officer_id");
                });
#pragma warning restore 612, 618
        }
    }
}
